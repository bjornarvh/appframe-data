function fireCallback(a){if("function"==typeof a){for(var b=arguments.length,c=Array(1<b?b-1:0),d=1;d<b;d++)c[d-1]=arguments[d];a(...c)}}function DataHandler(a){const b=a.articleId,c=a.dataSourceId,d=a.fields,e=a.groupBy;b?this.articleId=b:window.af&&window.af.article&&(this.articleId=window.af.article.id),this.dataSourceId=c||null,this.fields=d||null,this.groupBy=e||null}DataHandler.prototype.create=function(a,b){return this.request("create",a,b)},DataHandler.prototype.destroy=function(a,b){return this.request("destroy",a,b)},DataHandler.prototype.retrieve=function(a,b){return this.request("retrieve",a,b)},DataHandler.prototype.update=function(a,b){return this.request("update",a,b)},DataHandler.prototype.request=function(a,b,c){const d={body:JSON.stringify(b),method:"POST",headers:{"Content-Type":"application/json; charset=utf-8"}};let e=`/${a}/${this.articleId}/${this.dataSourceId}`;return this.fields&&(e+=`/${this.fields instanceof Array?this.fields.join("-"):this.fields}`),this.groupBy&&(e+="/"+this.groupBy),window.AbortController&&(this.previousRequestController&&this.previousRequestController.abort(),this.previousRequestController=new window.AbortController,d.signal=this.previousRequestController.signal),fetch(e,d).then(a=>a.json).then(a=>{if(this.previousRequestController&&this.previousRequestController.signal===d.signal&&(this.previousRequestController=null),a.hasOwnProperty("success"))return fireCallback(c,null,a.success),a;if(a.hasOwnProperty("error"))throw fireCallback(c,null,a.error),new Error(a.error)}).catch(a=>{if(window.AbortError||!(a instanceof window.AbortError))throw new Error(a)})};export default DataHandler;
