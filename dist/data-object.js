var DataObject =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/data-object.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/eventemitter3/index.js":
/*!*********************************************!*\
  !*** ./node_modules/eventemitter3/index.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif (true) {\n  module.exports = EventEmitter;\n}\n\n\n//# sourceURL=webpack://DataObject/./node_modules/eventemitter3/index.js?");

/***/ }),

/***/ "./src/common.ts":
/*!***********************!*\
  !*** ./src/common.ts ***!
  \***********************/
/*! exports provided: fireCallback */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fireCallback\", function() { return fireCallback; });\nfunction fireCallback(callback) {\n  if (typeof callback === 'function') {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    callback.apply(void 0, args);\n    return true;\n  }\n\n  return false;\n}\n\n//# sourceURL=webpack://DataObject/./src/common.ts?");

/***/ }),

/***/ "./src/data-handler.ts":
/*!*****************************!*\
  !*** ./src/data-handler.ts ***!
  \*****************************/
/*! exports provided: DataHandler */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DataHandler\", function() { return DataHandler; });\n/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common */ \"./src/common.ts\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\nvar DataHandler =\n/*#__PURE__*/\nfunction () {\n  function DataHandler() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, DataHandler);\n\n    _defineProperty(this, \"articleId\", void 0);\n\n    _defineProperty(this, \"dataSourceId\", void 0);\n\n    _defineProperty(this, \"fields\", void 0);\n\n    _defineProperty(this, \"groupBy\", void 0);\n\n    _defineProperty(this, \"timeout\", void 0);\n\n    _defineProperty(this, \"previousController\", null);\n\n    var articleId = options.articleId,\n        dataSourceId = options.dataSourceId,\n        fields = options.fields,\n        groupBy = options.groupBy,\n        timeout = options.timeout;\n\n    if (articleId) {\n      this.articleId = articleId;\n    } else if (af && af.article) {\n      this.articleId = af.article.id;\n    } else {\n      throw new Error('No article ID given.');\n    }\n\n    this.dataSourceId = dataSourceId || null;\n    this.fields = fields || null;\n    this.groupBy = groupBy || null;\n    this.timeout = timeout || 30000;\n  }\n  /**\n   * Adds a record to the database\n   * \n   * @param data Record that should be added\n   * @param callback Callback when the record has been created\n   */\n\n\n  _createClass(DataHandler, [{\n    key: \"create\",\n    value: function create(data, callback) {\n      return this.request('create', data, callback);\n    }\n    /**\n     * Deletes a record in the database\n     * \n     * @param data Object containing primkey of the record to delete\n     * @param callback Callback when the record has been created/an error has occured\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy(data, callback) {\n      return this.request('destroy', data, callback);\n    }\n    /**\n     * Retrieves one or more records based on the request parameters\n     * \n     * @param data Request parameters\n     * @param callback Callback when the record has been created/an error has occured\n     */\n\n  }, {\n    key: \"retrieve\",\n    value: function retrieve(data, callback) {\n      return this.request('retrieve', data, callback);\n    }\n    /**\n     * Updates a single record\n     * \n     * @param data Object containing PrimKey and any updated fields.\n     * @param callback Callback when the record has been updated/an error has occured\n     */\n\n  }, {\n    key: \"update\",\n    value: function update(data, callback) {\n      return this.request('update', data, callback);\n    }\n  }, {\n    key: \"request\",\n    value: function request(type, data, callback) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        var options = {\n          body: JSON.stringify(data),\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json; charset=utf-8'\n          }\n        };\n        var controller = null;\n        var url = \"/\".concat(type, \"/\").concat(_this.articleId, \"/\").concat(_this.dataSourceId);\n        var isTimedOut = false;\n\n        if (_this.fields) {\n          url += \"/\".concat(_this.fields instanceof Array ? _this.fields.join('-') : _this.fields);\n        }\n\n        if (_this.groupBy) {\n          url += '/' + _this.groupBy;\n        }\n\n        if (typeof AbortController !== 'undefined') {\n          if (_this.previousController) {\n            _this.previousController.abort();\n          }\n\n          controller = new AbortController();\n          _this.previousController = controller;\n          options.signal = _this.previousController.signal;\n        }\n\n        var timeoutFn = function timeoutFn() {\n          if (controller) {\n            controller.abort();\n          }\n\n          isTimedOut = true;\n          resolve(false);\n        };\n\n        var timeout = setTimeout(timeoutFn, _this.timeout);\n        fetch(url, options).then(function (result) {\n          clearTimeout(timeout);\n\n          if (isTimedOut) {\n            return Promise.resolve(false);\n          } else if (controller && _this.previousController !== controller) {\n            return Promise.resolve(false);\n          }\n\n          return result.json();\n        }).then(function (json) {\n          if (json === false) {\n            resolve(false);\n          } else if (json.hasOwnProperty('success')) {\n            Object(_common__WEBPACK_IMPORTED_MODULE_0__[\"fireCallback\"])(callback, null, json.success);\n            resolve(json.success);\n          } else if (json.hasOwnProperty('error')) {\n            Object(_common__WEBPACK_IMPORTED_MODULE_0__[\"fireCallback\"])(callback, json.error);\n            reject(json.error);\n          } else {\n            reject('Failed to interpret data returned from server');\n          }\n        }).catch(function (error) {\n          if (error.message === 'Aborted' || typeof AbortError !== 'undefined' && error instanceof AbortError) {\n            resolve(false);\n          } else {\n            reject(error);\n          }\n        });\n      });\n    }\n  }]);\n\n  return DataHandler;\n}();\n\n//# sourceURL=webpack://DataObject/./src/data-handler.ts?");

/***/ }),

/***/ "./src/data-object.ts":
/*!****************************!*\
  !*** ./src/data-object.ts ***!
  \****************************/
/*! exports provided: DataObject, DataHandler, MemoryStorage */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DataObject\", function() { return DataObject; });\n/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! eventemitter3 */ \"./node_modules/eventemitter3/index.js\");\n/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(eventemitter3__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _data_handler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./data-handler */ \"./src/data-handler.ts\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DataHandler\", function() { return _data_handler__WEBPACK_IMPORTED_MODULE_1__[\"DataHandler\"]; });\n\n/* harmony import */ var _memory_storage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./memory-storage */ \"./src/memory-storage.ts\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"MemoryStorage\", function() { return _memory_storage__WEBPACK_IMPORTED_MODULE_2__[\"MemoryStorage\"]; });\n\n/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./common */ \"./src/common.ts\");\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* eslint-disable no-console */\n\n\n\n\n\nvar DataObject =\n/*#__PURE__*/\nfunction (_EventEmitter) {\n  _inherits(DataObject, _EventEmitter);\n\n  function DataObject() {\n    var _this;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, DataObject);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DataObject).call(this));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_dataHandler\", void 0);\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_storageEngine\", new _memory_storage__WEBPACK_IMPORTED_MODULE_2__[\"MemoryStorage\"]());\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_options\", {\n      allowDelete: false,\n      allowUpdate: false,\n      allowInsert: false,\n      articleId: af && af.article && af.article.id,\n      confirmHandler: function confirmHandler(title, question, yes, no, cancel) {\n        return new Promise(function (resolve, reject) {\n          if (confirm(question)) {\n            resolve(true);\n          } else {\n            reject(cancel);\n          }\n        });\n      },\n      dataSourceId: null,\n      disableAutoload: false,\n      dynamicLoading: false,\n      fields: [],\n      groupBy: null,\n      linkFields: null,\n      masterDataObject: null,\n      optimisticLocking: false,\n      parameters: {\n        distinctRows: false,\n        filterObject: null,\n        filterString: '',\n        masterChildCriteria: {},\n        maxRecords: -1,\n        sortOrder: [],\n        whereObject: null,\n        whereClause: ''\n      },\n      selectFirstRow: true,\n      strict: false,\n      systemFieldNames: {},\n      timeout: 30000,\n      uniqueIdField: 'PrimKey'\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_fields\", []);\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_parametersChanged\", false);\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_currentIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_currentLoadingPromise\", null);\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_dataLoaded\", null);\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_dataSaving\", false);\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_dataLoading\", false);\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_disableDelete\", false);\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_disableUpdate\", false);\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_disableInsert\", false);\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_recordStatus\", new Map());\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"recordSource\", {\n      getFilterObject: function getFilterObject() {\n        return _this.getParameter('filterObject');\n      },\n      getFilterString: function getFilterString() {\n        return _this.getParameter('filterString');\n      },\n      getMaxRecords: function getMaxRecords() {\n        return _this.getParameter('maxRecords');\n      },\n      getSortOrder: function getSortOrder() {\n        return _this.getParameter('sortOrder');\n      },\n      getWhereClause: function getWhereClause() {\n        return _this.getParameter('whereClause');\n      },\n      getWhereObject: function getWhereObject() {\n        return _this.getParameter('whereObject');\n      },\n      setFilterObject: function setFilterObject(value) {\n        return _this.setParameter('filterObject', value);\n      },\n      setFilterString: function setFilterString(value) {\n        return _this.setParameter('filterString', value);\n      },\n      setMaxRecords: function setMaxRecords(value) {\n        return _this.setParameter('maxRecords', value);\n      },\n      setSortOrder: function setSortOrder(value) {\n        return _this.setParameter('sortOrder', value);\n      },\n      setWhereClause: function setWhereClause(value) {\n        return _this.setParameter('whereClause', value);\n      },\n      setWhereObject: function setWhereObject(value) {\n        return _this.setParameter('whereObject', value);\n      }\n    });\n\n    var _options = Object.assign({}, _this._options);\n\n    var parameters = Object.assign(_this._options.parameters, options.parameters);\n    _this._options = Object.assign(_options, options, {\n      parameters: parameters\n    });\n    _this._dataHandler = options.dataHandler || new _data_handler__WEBPACK_IMPORTED_MODULE_1__[\"DataHandler\"]({\n      articleId: options.articleId,\n      dataSourceId: options.dataSourceId,\n      timeout: options.timeout\n    });\n\n    _this.initialize();\n\n    return _this;\n  }\n\n  _createClass(DataObject, [{\n    key: \"areParametersChanged\",\n    value: function areParametersChanged() {\n      return this._parametersChanged;\n    }\n  }, {\n    key: \"areRecordsSaving\",\n    value: function areRecordsSaving() {\n      return false;\n    }\n  }, {\n    key: \"attachEvent\",\n    value: function attachEvent(event, eventHandler) {\n      _get(_getPrototypeOf(DataObject.prototype), \"on\", this).call(this, event, eventHandler);\n    }\n  }, {\n    key: \"detachEvent\",\n    value: function detachEvent(event, eventHandler) {\n      _get(_getPrototypeOf(DataObject.prototype), \"removeListener\", this).call(this, event, eventHandler);\n    }\n  }, {\n    key: \"cancelEdit\",\n    value: function cancelEdit() {\n      if (typeof this._currentIndex === 'number') {\n        if (this.isDirty(this._currentIndex)) {\n          this.cleanRecord(this._currentIndex);\n        }\n\n        this.emit('onCancelEdit', this._currentIndex);\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"cancelField\",\n    value: function cancelField(field) {\n      if (this._currentIndex !== null) {\n        return this.cleanRecord(this._currentIndex, field);\n      }\n\n      return false;\n    }\n  }, {\n    key: \"cleanRecord\",\n    value: function cleanRecord(index) {\n      var field = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n      if (field === null) {\n        var wasDirty = this._recordStatus.delete(index);\n\n        if (wasDirty) {\n          this.emit('onDirtyChanged', false);\n          this.emit('onRecordRefreshed', index);\n        }\n\n        return wasDirty;\n      } else {\n        var status = this._recordStatus.get(index);\n\n        if (status) {\n          return status.delete(field);\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: \"clearFilter\",\n    value: function clearFilter() {}\n  }, {\n    key: \"currentRow\",\n    value: function currentRow() {}\n  }, {\n    key: \"dataLastLoaded\",\n    value: function dataLastLoaded() {\n      return new Date();\n    }\n  }, {\n    key: \"endEdit\",\n    value: function endEdit(callback) {\n      return new Promise(function (resolve, reject) {});\n    }\n  }, {\n    key: \"deleteCurrentRow\",\n    value: function deleteCurrentRow(callback) {\n      return new Promise(function (resolve, reject) {});\n    }\n  }, {\n    key: \"deleteRow\",\n    value: function deleteRow(index, callback) {\n      return new Promise(function (resolve, reject) {});\n    }\n  }, {\n    key: \"initialize\",\n    value: function initialize() {\n      var _this2 = this;\n\n      if (!this._options.fields) {\n        this.getFieldsAsync().then(function (fields) {\n          _this2._options.fields = fields;\n        });\n      }\n\n      this.initialize = function () {\n        console.warn(\"Data object \".concat(this._options.dataSourceId, \" has already been initialized.\"));\n      };\n    }\n  }, {\n    key: \"isDataLoaded\",\n    value: function isDataLoaded() {\n      return false;\n    }\n  }, {\n    key: \"isDataLoading\",\n    value: function isDataLoading() {\n      return false;\n    }\n  }, {\n    key: \"isDeleteAllowed\",\n    value: function isDeleteAllowed() {\n      return this._options.allowDelete && !this._disableDelete;\n    }\n  }, {\n    key: \"isDeleteNeverAllowed\",\n    value: function isDeleteNeverAllowed() {\n      return this._options.allowDelete;\n    }\n  }, {\n    key: \"isDirty\",\n    value: function isDirty() {\n      var indexOrField = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n      if (typeof indexOrField === 'number') {\n        return this.isRecordDirty(indexOrField);\n      } else if (indexOrField === null && this._currentIndex !== null) {\n        return this.isRecordDirty(this._currentIndex);\n      } else if (typeof indexOrField === 'string' && this._currentIndex !== null) {\n        return this.isFieldDirty(this._currentIndex, indexOrField);\n      }\n\n      return false;\n    }\n  }, {\n    key: \"isFieldDirty\",\n    value: function isFieldDirty(index, field) {\n      var status = this._recordStatus.get(index);\n\n      if (status && status.has(field)) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"isRecordDirty\",\n    value: function isRecordDirty(index) {\n      var status = this._recordStatus.get(index);\n\n      if (status) {\n        return status.size > 0;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"isInsertAllowed\",\n    value: function isInsertAllowed() {\n      return this._options.allowInsert && !this._disableInsert;\n    }\n  }, {\n    key: \"isInsertNeverAllowed\",\n    value: function isInsertNeverAllowed() {\n      return this._options.allowInsert;\n    }\n  }, {\n    key: \"isUpdateAllowed\",\n    value: function isUpdateAllowed() {\n      return this._options.allowUpdate && !this._disableUpdate;\n    }\n  }, {\n    key: \"isUpdateNeverAllowed\",\n    value: function isUpdateNeverAllowed() {\n      return this._options.allowUpdate;\n    }\n  }, {\n    key: \"getCurrentIndex\",\n    value: function getCurrentIndex() {\n      return this._currentIndex;\n    }\n  }, {\n    key: \"getData\",\n    value: function getData(index, field) {\n      return {};\n    }\n  }, {\n    key: \"getDataLength\",\n    value: function getDataLength() {\n      return this._storageEngine.length();\n    }\n  }, {\n    key: \"getDataSourceId\",\n    value: function getDataSourceId() {\n      return this._options.dataSourceId;\n    }\n  }, {\n    key: \"getDirtyData\",\n    value: function getDirtyData(index, field) {\n      return null;\n    }\n  }, {\n    key: \"getFields\",\n    value: function getFields() {\n      throw new Error('Not implemented');\n    }\n  }, {\n    key: \"getFieldsAsync\",\n    value: function getFieldsAsync() {\n      return Promise.resolve([]);\n    }\n  }, {\n    key: \"getGroupBy\",\n    value: function getGroupBy() {\n      return '';\n    }\n  }, {\n    key: \"getLinkFields\",\n    value: function getLinkFields() {\n      return {};\n    }\n  }, {\n    key: \"getMasterDataObject\",\n    value: function getMasterDataObject() {\n      return this._options.masterDataObject;\n    }\n  }, {\n    key: \"getMaxRecords\",\n    value: function getMaxRecords() {\n      return -1;\n    }\n  }, {\n    key: \"getParameter\",\n    value: function getParameter(parameter) {\n      if (parameter in this._options.parameters) {\n        return this._options.parameters[parameter];\n      }\n\n      return null;\n    }\n  }, {\n    key: \"getUniqueIdField\",\n    value: function getUniqueIdField() {\n      return '';\n    }\n  }, {\n    key: \"refreshCurrentRow\",\n    value: function refreshCurrentRow(callback) {\n      return Promise.resolve(false);\n    }\n  }, {\n    key: \"refreshDataSource\",\n    value: function refreshDataSource(callback) {\n      var _this3 = this;\n\n      if (this.isDirty()) {\n        var answer = this._options.confirmHandler('Reloading data', 'There are unsaved changes. Would you like to save before reloading data?', 'Save and reload', 'Reload without saving', 'Cancel reloading');\n\n        return answer.then(function (saveFirst) {\n          if (saveFirst) {\n            return _this3.endEdit().then(function () {\n              return _this3.refreshDataSource(callback);\n            });\n          } else {\n            _this3.cancelEdit();\n\n            return _this3.refreshDataSource(callback);\n          }\n        }).catch(function () {\n          return false;\n        });\n      } else if (this._currentLoadingPromise !== null && !this.areParametersChanged()) {\n        if (typeof callback === 'function' && this._currentLoadingPromise !== null) {\n          this._currentLoadingPromise.then(function (result) {\n            return Object(_common__WEBPACK_IMPORTED_MODULE_3__[\"fireCallback\"])(callback, result);\n          });\n        }\n\n        return this._currentLoadingPromise;\n      }\n\n      this._currentLoadingPromise = new Promise(function (resolve, reject) {// TODO: Retrieve data\n      });\n      return this._currentLoadingPromise;\n    }\n  }, {\n    key: \"refreshRow\",\n    value: function refreshRow(index, callback) {\n      return new Promise(function (resolve, reject) {});\n    }\n  }, {\n    key: \"save\",\n    value: function save(data, callback) {\n      return Promise.resolve(false);\n    }\n  }, {\n    key: \"setAllowDelete\",\n    value: function setAllowDelete(allow) {\n      if (this._options.allowDelete && this._disableDelete !== !allow) {\n        this._disableDelete = !allow;\n        this.emit('onAllowDeleteChanged', allow);\n      }\n    }\n  }, {\n    key: \"setAllowUpdate\",\n    value: function setAllowUpdate(allow) {\n      if (this._options.allowUpdate && this._disableUpdate !== !allow) {\n        this._disableUpdate = !allow;\n        this.emit('onAllowUpdateChanged', allow);\n      }\n    }\n  }, {\n    key: \"setAllowInsert\",\n    value: function setAllowInsert(allow) {\n      if (this._options.allowInsert && this._disableInsert !== !allow) {\n        this._disableInsert = !allow;\n        this.emit('onAllowInsertChanged', allow);\n      }\n    }\n  }, {\n    key: \"setConfirmHandler\",\n    value: function setConfirmHandler(handler) {}\n  }, {\n    key: \"setCurrentIndex\",\n    value: function setCurrentIndex(index) {\n      return false;\n    }\n  }, {\n    key: \"setGroupBy\",\n    value: function setGroupBy(groupBy) {}\n  }, {\n    key: \"setParameter\",\n    value: function setParameter(parameter, value) {\n      var isFilterStringParam = ['filterString', 'whereClause'].includes(parameter);\n\n      if (this._options.strict && isFilterStringParam) {\n        throw new Error(\"Setting \".concat(parameter, \" is not allowed when dataObject is in strict mode\"));\n      }\n\n      if (isFilterStringParam) {\n        if (!value) {\n          value = '';\n        }\n\n        this.setParameter(parameter === 'filterString' ? 'filterObject' : 'whereObject', null);\n      }\n\n      var current = this._options.parameters[parameter];\n\n      if (current !== value) {\n        this._options.parameters[parameter] = value;\n        this.emit('onParameterUpdated', parameter);\n      }\n    }\n  }]);\n\n  return DataObject;\n}(eventemitter3__WEBPACK_IMPORTED_MODULE_0___default.a);\n\n\n\n//# sourceURL=webpack://DataObject/./src/data-object.ts?");

/***/ }),

/***/ "./src/memory-storage.ts":
/*!*******************************!*\
  !*** ./src/memory-storage.ts ***!
  \*******************************/
/*! exports provided: MemoryStorage */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MemoryStorage\", function() { return MemoryStorage; });\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar invalidIndexError = 'Index must be a number and be within the range of the data indices.';\nvar invalidRecordError = 'Record must be an object';\nvar MemoryStorage =\n/*#__PURE__*/\nfunction () {\n  function MemoryStorage() {\n    _classCallCheck(this, MemoryStorage);\n\n    _defineProperty(this, \"data\", []);\n  }\n\n  _createClass(MemoryStorage, [{\n    key: \"create\",\n\n    /**\n     * Adds a record to the storage\n     * \n     * @param record Record to add to the storage\n     * @returns Index of the created record\n     */\n    value: function create(record) {\n      if (_typeof(record) !== 'object') {\n        throw new TypeError(invalidRecordError);\n      }\n\n      return this.data.push(record) - 1;\n    }\n    /**\n     * Removes a record from the storage\n     * \n     * @param index Index of the record to remove\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy(index) {\n      if (this.isValidIndex(index)) {\n        this.data.splice(index, 1);\n      } else {\n        throw new TypeError(invalidIndexError);\n      }\n    }\n    /**\n     * Checks if an index is valid for the storage.\n     * \n     * @param index Index to be checked if is valid\n     */\n\n  }, {\n    key: \"isValidIndex\",\n    value: function isValidIndex(index) {\n      if (typeof index === 'number' && !isNaN(index)) {\n        return index >= 0 && index < this.data.length;\n      }\n\n      return false;\n    }\n    /**\n     * @returns Current number of records stored.\n     */\n\n  }, {\n    key: \"length\",\n    value: function length() {\n      return this.data.length;\n    }\n    /**\n     * Retrieves a single record from the storage, or an array of\n     * all records if index is not given.\n     * \n     * @param index Index of the record to be retrieved\n     */\n\n  }, {\n    key: \"retrieve\",\n    value: function retrieve(index) {\n      if (typeof index === 'undefined') {\n        return this.data;\n      } else if (this.isValidIndex(index)) {\n        return this.data[index];\n      }\n\n      throw new TypeError(invalidIndexError);\n    }\n    /**\n     * \n     * @param index Index of the record to update\n     * @param data Data to update the record with\n     */\n\n  }, {\n    key: \"update\",\n    value: function update(index, data) {\n      if (this.isValidIndex(index)) {\n        if (data instanceof Array) {\n          this.data[index] = data;\n        } else if (_typeof(data) === 'object') {\n          this.data[index] = Object.assign({}, this.data[index], data);\n        } else {\n          throw new TypeError(invalidRecordError);\n        }\n      } else {\n        throw new TypeError(invalidIndexError);\n      }\n    }\n  }]);\n\n  return MemoryStorage;\n}();\n\n//# sourceURL=webpack://DataObject/./src/memory-storage.ts?");

/***/ })

/******/ });